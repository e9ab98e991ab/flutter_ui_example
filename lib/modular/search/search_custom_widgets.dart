/// Generated by Flutter GetX Starter on 2021-10-27 15:38
import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:flutter_ui_example/utils/text_utils.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:mmkv/mmkv.dart';


class SearchMainView extends StatefulWidget {
  const SearchMainView({Key? key}) : super(key: key);
  @override
  State<SearchMainView> createState() => _SearchPageState();
}

const String search_content_key = "search_content_key";

class _SearchPageState extends State<SearchMainView> {
  TextEditingController textController = TextEditingController();
  final MMKV _mmkv = MMKV.defaultMMKV();
  var searchList = [];

  @override
  void initState() {
    textController.text = '';
    searchListReads();
    super.initState();
  }

  @override
  void dispose() {
    super.dispose();
    searchListSave();
  }

  //搜索记录获取
  void searchListReads() {
    var data = _mmkv.decodeString(search_content_key);
    searchList = data == null ? [] : data.split(",");
  }

  //搜索记录写入
  void searchListSave() {
    _mmkv.encodeString(search_content_key, searchList.join(","));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Container(
        width: double.infinity,
        height: double.infinity,
        child: Column(
          children: <Widget>[
            SizedBox(
              height: 80.h,
              width: double.infinity,
              child: AppBar(
                  title: TextField(
                    maxLines: 1,
                    // autofocus: true,
                    controller: textController,
                    cursorColor: Colors.black,
                    keyboardType: TextInputType.text,
                    style: const TextStyle(color: Colors.white),
                    decoration: buildInputDecoration(),
                    onChanged: (value) {
                      setState(() {
                        textController.value =
                            TextUtils.buildTextEditingValue(value);
                      });
                    },
                  ),
                  actions: [
                    IconButton(
                      icon: const Icon(Icons.search),
                      onPressed: () {
                        if (textController.text.isEmpty) {
                          Get.snackbar("提示信息", "请输入搜索内容");
                          return;
                        }
                        if (!searchList.contains(textController.text)) {
                          searchList.add(textController.text);
                        }
                        searchListSave();
                        Get.snackbar("您搜索的信息是", textController.text);
                      },
                    )
                  ]),
            ),
            Container(
                width: double.infinity,
                padding: const EdgeInsets.all(10),
                child: const Text("历史搜索")),
            GridView.builder(
              shrinkWrap: true,
              padding: const EdgeInsets.all(5),
              physics: const NeverScrollableScrollPhysics(),
              gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                  crossAxisCount: 6),
              itemBuilder: (BuildContext context, int index) {
                return InkWell(
                  child: Card(child: Center(child: Text(searchList[index]))),
                  onTap: () {
                    textController.value =
                        TextUtils.buildTextEditingValue(searchList[index]);
                  },
                );
              },
              itemCount: searchList.length,
            ),
            Container(
              width: double.infinity,
              padding: const EdgeInsets.all(10),
              child: const Text("热门搜索"),
            ),
            Expanded(
              child: ListView.builder(
                padding: EdgeInsets.zero,
                itemCount: 8,
                physics: const BouncingScrollPhysics(),
                itemBuilder: (_, index) {
                  return Container(
                    height: 100.h,
                    margin: const EdgeInsets.all(5),
                    color: Colors.black12,
                    child: buildListItem(index),
                  );
                },
              ),
            )
          ],
        ),
      ),
    );
  }

  InkWell buildListItem(int index) {
    return InkWell(
      child: Row(
        children: [
          Card(
            child: CachedNetworkImage(
                imageUrl:
                    "http://cdnsdk.stvgame.com/imgfile/2018-03-02/00fc1dea-bec1-42be-a397-6f816b851022.jpg"),
            shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.all(Radius.circular(5.w))),
          ),
          Expanded(
              child: ListTile(
            contentPadding: EdgeInsets.all(5),
            title: buildText("善人，吾不得而见之矣，得见有恒者，斯可矣，亡而为有，虚而为盈，约而为泰，难乎有恒矣。", 18),
            subtitle: buildText("学而时习之，不亦说乎？有朋自远方来，不亦乐乎？人不知而不愠，不亦君子乎。", 10),
          ))
        ],
      ),
      onTap: (){
        Get.snackbar("title", index.toString());
      },
    );
  }

  Text buildText(String content, double size) {
    return Text(
      content,
      maxLines: 2,
      overflow: TextOverflow.ellipsis,
      style: TextStyle(fontSize: size),
    );
  }

  InputDecoration buildInputDecoration() {
    return InputDecoration(
        hintText: '搜索',
        // enabledBorder: const UnderlineInputBorder(
        //   borderSide: BorderSide(color: Colors.white70),
        // ),
        // focusedBorder: UnderlineInputBorder(
        //   borderSide: BorderSide(color: Colors.white70),
        // ),
        // hintStyle: const TextStyle(color: Colors.black26),
        suffixIcon: IconButton(
          onPressed: () {
            setState(() => textController.clear());
          },
          icon: Icon(
            Icons.close,
            color: textController.text.isEmpty ? Colors.blue : Colors.grey,
          ),
        ));
  }
}
